import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

public class AnimalAcuatico {
	byte id;
	byte genero;
	int x;
	int y;
	
	public AnimalAcuatico(byte id){
		this.id = id;
		this.genero = GenerateSex();
		do{
			this.x = GenerateCoord(); 
			this.y = GenerateCoord();
		} while(ComprobarPosicion(Main.estanque));
	}

	public AnimalAcuatico(byte id, byte genero){
		this.id = id;
		this.genero = genero;
		do{
			this.x = GenerateCoord(); 
			this.y = GenerateCoord();
		} while(ComprobarPosicion(Main.estanque));
	}
	
	private byte GenerateSex(){
		byte sex;
		Random random = new Random();
		
		sex = (byte) random.nextInt(2);
		
		return sex;
	}

	public byte GetId(){
		return this.id;
	}
	
	public byte GetSex(){
		return this.genero;
	}
	
	public int GetX(){
		return this.x;
	}
	
	public int GetY(){
		return this.y;
	}
	
	public void Moverse(){
		Random random = new Random();
		
		switch(random.nextInt(4)){
		case 0: // Derecha
			x++;
			break;
		case 1: // Izquierda
			x--;
			break;
		case 2: // Abajo
			y++;
			break;
		case 3: // Arriba
			y--;
			break;
		}
		
		
	}

	private int GenerateCoord(){
		Random random = new Random();
		int coord = 0;
		
		coord = random.nextInt(1000);
		
		return coord;
	}
	
	private boolean ComprobarPosicion(ArrayList<AnimalAcuatico> estanque) {
		int contador = 0;
		
		for(contador = 0; contador < estanque.size(); contador++){
			if(estanque.get(contador).GetX() == this.x && estanque.get(contador).GetY() == this.y){
				return true;
			}
		}
		
		return false;
	}
	
	//ESTO DE AQUI ES EL METODO QUE EJECUTA AL SEXO O PELEA.
	//LE PASA LOS 2 ANIMALESACUATICOS QUE SE HAN CHOCADO.
	public void AccionAlChocar(AnimalAcuatico PrimerAnimal, AnimalAcuatico SegundoAnimal){
		String especieid1;
		String especieid2;
		Byte Sexoid1;
		Byte Sexoid2;
		AnimalAcuatico Superviviente = null;
		
		especieid1 = comprobarespecie(PrimerAnimal.GetId()); //Asigna la especie del animal 1 al "especieid1"
		especieid2 = comprobarespecie(SegundoAnimal.GetId()); //Asigna la especie del animal 2 al "especieid2"
		
		
		if(especieid1 == especieid2){
			//Falta por comprobar si son masculino o femenino. En el caso de tener distinto sexo follan
			//Combate entre los especies con un 50% de posibilidades de ganar cada 1
			Sexoid1 = PrimerAnimal.GetSex();
			Sexoid2 = SegundoAnimal.GetSex();
			if(Sexoid1 == Sexoid2){
				//LLAMA METODO DE PELEARSE
				//DEVUELVE EL PEZ SUPERVIVIENTE.
				Superviviente = Pelearse(PrimerAnimal,SegundoAnimal); //El metodo Pelearse ya elimina el pez/tiburon que muere
			}else if (Sexoid1 != Sexoid2){
				//FOLLAN
				if(especieid1 == "pez"){ //Si el ID es de Pez, se ejecuta el metodo reproducir Pez
					
					ReproducirPez();
					
				}
				if(especieid1 == "tiburon"){//Si el ID es de tiburon, se ejecuta el metodo reproducir Tiburon
					
					ReproducirTiburon();
					
				}
			}
			
		} else if(especieid1 != especieid2){ //En el caso de ser especie distinto. El Tiburon mata al pez.
			
			
		
			if(especieid1 == "pez"){
			
			EliminarPez(PrimerAnimal);	//ESTO ESTA EN ROJO PORQUE NO ESTAN UNIDOS LAS CLASES TODAVIA
			}else{
				EliminarPez(SegundoAnimal);	//ESTO ESTA EN ROJO PORQUE NO ESTAN UNIDOS LAS CLASES TODAVIA	
			}
			
			
		}

	
	}
	//Este metodo se puede llamar para que devuelva el tipo de animal que es (devuelve un string con "tiburon" o "pez")
	public String comprobarespecie(byte id) {
		 String PrimeraLetra = null;
		 String str = Character.toString((char) id); //Esto pasa de Char a String ya que no se puede usar el Substring
		 											//con un Char
		 String especie = null;
		//Aqui solo se comprueba a ver si es 1 o 2. No tiene en cuenta si modificamos el ID, solo mira
		//ID = la PRIMERA letra del ID 
		 PrimeraLetra = str.substring(0, 1);
		 
		 
		if(PrimeraLetra == "1"){ //en el caso de ser 1
				
			especie = "pez";
			
			
		}else { //si el tiburon es 2
			especie = "tiburon";
		}
		
		return especie;
	}
	public ArrayList EliminarPez(AnimalAcuatico objetc1){	
		//Elimina el Pez del array de Animales usando Memoria dinamica.
		ArrayList<Pez> lista = ;
		//1234 - TENGO DUDA DE COMO COGER EL ARRAYLIST DE LA CLASE PANELACUATICO_SAMU
		
		for (int j = lista.length-1; j >= 0; j--) {
			lista.remove(objetc1); //ESto de aqui elimina el pez mandado
		}
	}
	public ArrayList EliminarTiburon(AnimalAcuatico objetc1){	
		//Elimina el Tiburon del array de Animales usando Memoria dinamica.
		ArrayList<Tiburon> lista = ;
		//1234 - TENGO DUDA DE COMO COGER EL ARRAYLIST DE LA CLASE PANELACUATICO_SAMU
		
		for (int j = lista.length-1; j >= 0; j--) {
			lista.remove(objetc1); //ESto de aqui elimina el pez mandado
		}
	}
	protected AnimalAcuatico Pelearse(AnimalAcuatico PrimerAnimal,AnimalAcuatico SegundoAnimal){	
	AnimalAcuatico Ganador = null;
	int numeroaleatorio;
	int especie;
	String especieid1;
	Random r = new Random();
	 numeroaleatorio = r.nextInt(0)+1;  //GENERA UN NUMERO ALEATORIO ENTRE 0 Y 1
	 especieid1 = comprobarespecie(PrimerAnimal.GetId()); //Asigna la especie del animal 1 al "especieid1"

	 if(especieid1 == "Pez"){
	 if(numeroaleatorio == 1){
		 Ganador = PrimerAnimal;
		 EliminarPez(SegundoAnimal);
	 }else{ 
		 
		 Ganador = SegundoAnimal;
		 EliminarPez(PrimerAnimal);
		 
	 }
	 } else {
		 
		 if(numeroaleatorio == 1){
			 Ganador = PrimerAnimal;
			 EliminarTiburon(SegundoAnimal);
		 }else{ 
			 
			 Ganador = SegundoAnimal;
			 EliminarTiburon(PrimerAnimal);
			 
		 }
		 
		 
	 }
		return Ganador;
	}
public AnimalAcuatico ReproducirPez(){	
	Pez nuevoPez = New Pez;
	
	//Falta por completar
	
	return nuevoPez;
	}
public AnimalAcuatico ReproducirTiburon(){	
	Tiburon NuevoTiburon = New Tiburon;
	
	//Falta por completar
	
	return NuevoTiburon;
	}
}
