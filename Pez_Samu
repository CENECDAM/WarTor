package test;

import java.awt.Rectangle;
import java.util.Random;

public class Pez extends Thread {
	private static int peces = 0;
	private int id;
	private Rectangle posicion;
	private byte sexo;
	private byte especie;
	private PanelAcuatico acuario;

	public Pez(PanelAcuatico acuario) {
		this.id = peces;
		peces++;
		this.posicion = new Rectangle(new Random().nextInt(1001), new Random().nextInt(1001), 10, 10);
		this.sexo = (byte) (new Random().nextInt(2) + 1);
		this.especie = (byte) (new Random().nextInt(2) + 1);
		this.acuario = acuario;
	}
	
	public Pez(PanelAcuatico acuario, byte especie, byte sexo) {
		this.id = peces;
		peces++;
		this.posicion = new Rectangle(new Random().nextInt(1001), new Random().nextInt(1001), 10, 10);
		this.sexo = sexo;
		this.especie = especie;
		this.acuario = acuario;
	}

	public Rectangle getPosicion(){
		return this.posicion;
	}
	
	public byte getSexo() {
		return sexo;
	}

	public byte getEspecie() {
		return especie;
	}

	public int getid() {
		return id;
	}

	public void run() {
		while (true) {
			Moverse();
			acuario.repaint();
			try {
				Thread.sleep(5);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
	}
	
	private void Moverse(){
		int x = posicion.x;
		int y = posicion.y;
		
		switch(new Random().nextInt(4)){
		case 0:
			x++;
			break;
		case 1:
			x--;
			break;
		case 2:
			y++;
			break;
		case 3:
			y--;
			break;
		}
		
		if(x > 1000){
			x = 1000;
		}
		else if(x < 0){
			x = 0;
		}
		else if(y > 1000){
			y = 1000;
		}
		else if(y < 0){
			y = 0;
		}
		
		posicion.setLocation(x, y);
		
		posicion.intersects(this.acuario.verAnimales().get(/*aqui va el contador*/).getPosicion());
		//ComprobarPosicion();
		
	}
}
